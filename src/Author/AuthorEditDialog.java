/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Author;

import Publisher.*;
import Default.StaticAccess;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author keno
 */
public class AuthorEditDialog extends javax.swing.JDialog {

    /**
     * Creates new form PublishEditDialog
     */
    int author_id;
    boolean success = false;

    public AuthorEditDialog(java.awt.Frame parent, boolean modal, int author_id, String name, String religion) {
        super(parent, modal);
        initComponents();
        this.author_id = author_id;
        this.setTitle("Update Author: " + name);
        this.setLocation(this.getToolkit().getScreenSize().width / 2 - this.getWidth() / 2,
                this.getToolkit().getScreenSize().height / 2 - this.getHeight() / 2);
        nameTF.setText(name);
        StaticAccess.setSelectedItem(religionCBX, religion);
        religionTF.setText(religion);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        insertBTN = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        religionCBX = new javax.swing.JComboBox();
        religionTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Name:");

        insertBTN.setBackground(new java.awt.Color(153, 0, 0));
        insertBTN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertBTN.setForeground(new java.awt.Color(204, 204, 204));
        insertBTN.setText("UPDATE INFO");
        insertBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBTNActionPerformed(evt);
            }
        });

        jLabel2.setText("Religion:");

        religionCBX.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ISLAM", "HINDUIST", "BUDHIST", "CRISTIAN", "OTHER" }));
        religionCBX.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                religionCBXItemStateChanged(evt);
            }
        });

        religionTF.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(insertBTN)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(religionCBX, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(religionTF, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(religionCBX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(religionTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertBTN)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBTNActionPerformed
        // TODO add your handling code here:
        String name = nameTF.getText().trim();
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sorry name can't be empty", "Name Empty!!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String religion = religionTF.getText().trim();
        try {
            database.DatabaseFunctionClassAuthor.update(name, religion, author_id);
            JOptionPane.showMessageDialog(this, "Successfully updated", "Updated!!", JOptionPane.INFORMATION_MESSAGE);
            success = true;
            this.dispose();
        } catch (SQLException ex) {
            StaticAccess.showMassageDialog(this, "Sorry update can't possible", ex);
        }
    }//GEN-LAST:event_insertBTNActionPerformed

    private void religionCBXItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_religionCBXItemStateChanged
        // TODO add your handling code here:
        religionTF.setText(religionCBX.getSelectedItem().toString());
        if (religionCBX.getSelectedItem().toString().equals("OTHER")) {
            religionTF.setText("");
            religionTF.setEditable(true);
        } else {
            religionTF.setEditable(false);
        }
    }//GEN-LAST:event_religionCBXItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton insertBTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField nameTF;
    private javax.swing.JComboBox religionCBX;
    private javax.swing.JTextField religionTF;
    // End of variables declaration//GEN-END:variables
}
